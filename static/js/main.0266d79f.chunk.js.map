{"version":3,"sources":["images/logo.png","apis/filterApi.js","utils/constants/apiConstants.js","utils/helpers/httpHelper.js","actions/index.js","apis/spotifyApi.js","utils/constants/actionsConstants.js","utils/constants/actionTypes.js","components/Loading.js","components/Filter.js","utils/constants/regexConstants.js","utils/constants/components/filterConstants.js","components/FeaturedPlaylistItem.js","reducers/index.js","reducers/filterReducer.js","reducers/featuredPlaylistsReducer.js","reducers/authReducer.js","store.js","components/FeaturedPlaylists.js","utils/constants/components/featuredPlaylistsConstants.js","components/Home.js","components/Callback.js","utils/queryString.js","utils/constants/components/callbackConstants.js","components/Auth.js","utils/constants/components/authConstants.js","components/App.js","index.js"],"names":["module","exports","axios","create","baseURL","buildParameters","filter","params","Object","keys","key","map","item","fetchFeaturedPlaylists","dispatch","getState","a","token","authorization","access_token","accessToken","headers","get","response","type","payload","data","playlists","fetchAuthorization","query","Loading","props","className","height","text","Filter","state","dateFormat","validTimestamp","validLimit","validOffset","unauthorized","country","locale","timestamp","limit","offset","getFeaturedPlaylists","mapStateToFilter","formValidation","catch","error","status","setState","onInputChange","event","target","name","value","submitForm","preventDefault","RegExp","test","buildFieldsObject","fields","id","this","fetchFilterData","intervalId","setInterval","clearInterval","to","length","onSubmit","onChange","values","index","placeholder","Component","connect","filterApi","filters","FeaturedPlaylistCard","src","playlist","images","url","alt","description","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","FeaturedPlaylists","term","filterPlaylists","items","toLowerCase","indexOf","Home","Logo","Callback","location","hash","queryString","parse","React","Auth","stringify","encodeQuery","client_id","response_type","redirect_uri","window","href","App","basename","process","path","component","exact","from","container","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0266d79f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c4b73443.png\";","import axios from 'axios';\r\nimport * as ApiConstants from '../utils/constants/apiConstants';\r\n\r\n// Create a base http client instance for Filter API\r\nexport default axios.create({\r\n    baseURL: ApiConstants.API_FILTER_BASE_URL\r\n});","// api -> filterApi.js\r\nexport const API_FILTER_BASE_URL = 'http://www.mocky.io';\r\n\r\n// api -> spotifyApi.js\r\nexport const API_SPOTIFY_BASE_URL = 'https://api.spotify.com';","export const buildParameters = (filter) => {\r\n    let params = {};\r\n    const objectParameters = Object.keys(filter).filter(key => {\r\n        if(filter[key] > 0 || !!filter[key]){\r\n            return {[key]: filter[key]};\r\n        }\r\n    }) || {};\r\n    \r\n    objectParameters.map(item => {\r\n        return params[item] = filter[item];\r\n    });\r\n\r\n    return params;\r\n}","import filterApi from '../apis/filterApi';\r\nimport { spotifyApi } from '../apis/spotifyApi';\r\nimport * as ActionConstants from '../utils/constants/actionsConstants';\r\nimport * as ActionTypes from '../utils/constants/actionTypes';\r\nimport { buildParameters } from '../utils/helpers/httpHelper';\r\n\r\nexport const fetchFilterData = () => async dispatch => {\r\n    const response = await filterApi.get(ActionConstants.FILTER_GET_DATA_ENDPOINT);\r\n\r\n    dispatch({ type: ActionTypes.ACTION_FETCH_FILTER_DATA, payload: response.data.filters });\r\n}\r\n\r\nexport const fetchFeaturedPlaylists = (filter) => async (dispatch, getState) => {\r\n    const token = getState().authorization.access_token;\r\n    const axios = spotifyApi(token);\r\n    const params = buildParameters(filter);\r\n\r\n    const response = await axios.get(ActionConstants.FEATURED_PLAYLISTS_GET_DATA_ENDPOINT, {\r\n        params\r\n    });\r\n\r\n    dispatch({ type: ActionTypes.ACTION_FETCH_FEATURED_PLAYLISTS, payload: response.data.playlists })\r\n}\r\n\r\nexport const fetchAuthorization = query => dispatch => {\r\n    dispatch({ type: ActionTypes.ACTION_FETCH_AUTHORIZATION_CODE, payload: query });\r\n}","import axios from 'axios';\r\nimport * as ApiConstants from '../utils/constants/apiConstants';\r\n\r\n// Create a base http client instance for Spotify API\r\nexport const spotifyApi = (accessToken) => {\r\n    return (\r\n        axios.create({\r\n            baseURL: ApiConstants.API_SPOTIFY_BASE_URL,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + accessToken\r\n            }\r\n        })\r\n    );\r\n}   ","export const FILTER_GET_DATA_ENDPOINT = '/v2/5a25fade2e0000213aa90776';\r\nexport const FEATURED_PLAYLISTS_GET_DATA_ENDPOINT = '/v1/browse/featured-playlists';","export const ACTION_FETCH_FILTER_DATA = 'FETCH_FILTER_DATA';\r\nexport const ACTION_FETCH_FEATURED_PLAYLISTS = 'FETCH_FEATURED_PLAYLISTS';\r\nexport const ACTION_FETCH_AUTHORIZATION_CODE = 'FETCH_AUTHORIZATION_CODE';","import React from 'react';\r\nimport '../css/loading.css';\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <div className={\"ui segment \" + props.height}> \r\n            <div className=\"ui active inverted dimmer\">\r\n                <div className=\"ui small text loader\">{props.text}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading; ","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { fetchFilterData, fetchFeaturedPlaylists } from '../actions';\r\nimport Loading from '../components/Loading';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as FilterConstants from '../utils/constants/components/filterConstants';\r\nimport * as RegexConstants from '../utils/constants/regexConstants';\r\n\r\nclass Filter extends Component {\r\n\r\n    state = { \r\n        dateFormat: RegexConstants.REGEX_TIMESTAMP,\r\n        validTimestamp: true,\r\n        validLimit: true,\r\n        validOffset: true,\r\n        unauthorized: false,\r\n        country: '',\r\n        locale: '',\r\n        timestamp: '',\r\n        limit: 20,\r\n        offset: 0\r\n     };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchFilterData();\r\n        this.getFeaturedPlaylists();\r\n\r\n        this.intervalId = setInterval(() => {\r\n            this.getFeaturedPlaylists();\r\n        }, FilterConstants.TIME_INTERVAL_TO_REFRESH);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    getFeaturedPlaylists = () => {\r\n\r\n        const filter = {...this.mapStateToFilter()};\r\n        const validForm = this.formValidation(filter);\r\n\r\n        if(validForm) {\r\n            this.props.fetchFeaturedPlaylists(filter).catch((error) => \r\n            {\r\n                if (error.response.status === 401) {\r\n                    this.setState({ unauthorized: true });\r\n                } \r\n            });\r\n        }\r\n    }\r\n\r\n    mapStateToFilter = () => {\r\n        const filter = {\r\n            country: this.state.country,\r\n            locale: this.state.locale,\r\n            timestamp: this.state.timestamp,\r\n            limit: this.state.limit,\r\n            offset: this.state.offset\r\n        }\r\n\r\n        return filter;\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.getFeaturedPlaylists();\r\n    }\r\n\r\n    formValidation = (filter) => {\r\n        const regex = new RegExp(this.state.dateFormat);\r\n        const validTimestamp = regex.test(filter.timestamp) || filter.timestamp === '';\r\n        const validLimit = (filter.limit > 0 && filter.limit <= 50) || filter.limit === '';\r\n        const validOffset = (filter.offset >= 0) || filter.offset === '';\r\n\r\n        this.setState({\r\n            validTimestamp,\r\n            validLimit,\r\n            validOffset\r\n        });\r\n\r\n        return validLimit && validOffset && validTimestamp;\r\n    }\r\n\r\n    buildFieldsObject = () => {\r\n        let fields = {};\r\n        \r\n        this.props.filter.map(item => {\r\n            return fields[item.id] = { ...item };\r\n        });\r\n\r\n        return fields;\r\n    }\r\n\r\n    render() {\r\n        if(this.state.unauthorized) {\r\n            this.setState({ unauthorized: false });\r\n            return <Redirect to=\"/auth\" />\r\n        }\r\n\r\n        if(!this.props.filter.length){\r\n            return(<Loading text={FilterConstants.FILTER_LOADING_TEXT} height=\"small-height\" />);\r\n        }\r\n\r\n        let fields = this.buildFieldsObject();\r\n        \r\n        this.props.filter.map(item => {\r\n            fields[item.id] = { ...item };\r\n        });\r\n\r\n        return (\r\n            <div className=\"ui segment app--full-background-color\">\r\n                <h2>Filter</h2>\r\n                <form onSubmit={this.submitForm} className=\"ui form\">\r\n                    <div className=\"fields\">\r\n                        <div className=\"eight wide field\">\r\n                            <label>{fields.country.name}</label>\r\n                            <select className=\"ui dropdown\" name='country' onChange={this.onInputChange}>\r\n                                <option value=''>{fields.country.name}</option>\r\n                                { \r\n                                    fields.country.values.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.value}>{item.name}</option>\r\n                                        );\r\n                                    }) \r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"eight wide field\">\r\n                            <label>{fields.locale.name}</label>\r\n                            <select className=\"ui dropdown\" name='locale' onChange={this.onInputChange}>\r\n                                <option value=''>{fields.locale.name}</option>\r\n                                { \r\n                                    fields.locale.values.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.value}>{item.name}</option>\r\n                                        );\r\n                                    }) \r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fields\">\r\n                        <div className={this.state.validTimestamp ? 'eight wide field' : 'eight wide field error'}>\r\n                            <label>{fields.timestamp.name}</label>\r\n                            <div className=\"ui input\">\r\n                                <input type=\"text\" name='timestamp' onChange={this.onInputChange} placeholder={fields.timestamp.name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={this.state.validLimit ? 'four wide field' : 'four wide field error'}>\r\n                            <label>{fields.limit.name}</label>\r\n                            <div className=\"ui input\">\r\n                                <input type=\"number\" name='limit' onChange={this.onInputChange} placeholder={fields.limit.name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={this.state.validOffset ? 'four wide field' : 'four wide field error'}>\r\n                            <label>{fields.offset.name}</label>\r\n                            <div className=\"ui input\">\r\n                                <input type=\"number\" name='offset' onChange={this.onInputChange} placeholder={fields.offset.name} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"wide app--align-right app--bottom-align app--submit-container\">\r\n                        <button className=\"ui button app--button app--primary-button app--border-button\" type=\"submit\">FILTER</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filter: state.filter\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchFilterData, fetchFeaturedPlaylists })(Filter);","export const REGEX_TIMESTAMP = '^(\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2})$';","export const FILTER_LOADING_TEXT = 'Loading filter data ...';\r\nexport const TIME_INTERVAL_TO_REFRESH = 30000;","import React from 'react';\r\n\r\nconst FeaturedPlaylistCard = (props) => {\r\n    return (\r\n        <div className=\"column\">\r\n            <div className=\"ui raised segment\">\r\n                <div className=\"ui unstackable items\">\r\n                    <div className=\"item\">\r\n                        <div className=\"ui small image\">\r\n                            <img src={props.playlist.images[0].url} alt={props.playlist.name} />\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <h2 className=\"header\">{props.playlist.name}</h2>\r\n                            <div className=\"meta\"></div>\r\n                            <div className=\"description\">\r\n                                <span>{props.playlist.description}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FeaturedPlaylistCard;","import { combineReducers } from 'redux';\r\nimport filterReducer from './filterReducer';\r\nimport featuredPlaylistsReducer from './featuredPlaylistsReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers ({  \r\n    filter: filterReducer,\r\n    playlists: featuredPlaylistsReducer,\r\n    authorization: authReducer\r\n});","import * as ActionTypes from '../utils/constants/actionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ACTION_FETCH_FILTER_DATA:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from '../utils/constants/actionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ACTION_FETCH_FEATURED_PLAYLISTS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from '../utils/constants/actionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ACTION_FETCH_AUTHORIZATION_CODE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import reducers from './reducers/index';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchFeaturedPlaylists, fetchAuthorization } from '../actions';\r\nimport Loading from '../components/Loading';\r\nimport FeaturedPlaylistCard from './FeaturedPlaylistItem';\r\nimport * as PlaylistsConstants from '../utils/constants/components/featuredPlaylistsConstants';\r\nimport store from '../store';\r\n\r\nclass FeaturedPlaylists extends Component {\r\n    state = { \r\n        playlists: [],\r\n        term: '' \r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     console.log(\"DID: \");\r\n    //     console.log(store.getState());\r\n    // }\r\n\r\n    // componentWillReceiveProps(){\r\n    //     console.log(\"WILL RECEIVE: \");\r\n    //     console.log(store.getState());\r\n    // }\r\n\r\n    filterPlaylists = () => {\r\n        let playlists = [...this.props.playlists.items];\r\n\r\n        const filteredPLaylists = playlists.filter((playlist) => {\r\n            return playlist.name.toLowerCase().indexOf(this.state.term) >= 0;\r\n        })\r\n\r\n        return filteredPLaylists;\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.props.playlists.items) {\r\n           return (<Loading text={PlaylistsConstants.FEATURED_PLAYLISTS_LOADING_TEXT} height=\"medium-height\" />);\r\n        }\r\n        \r\n        const playlists = this.filterPlaylists();\r\n\r\n        return (\r\n            <div className=\"ui segment app--full-background-color\">\r\n                <h2>Featured Playlists</h2>\r\n                <br />\r\n                <div className=\"ui fluid big icon input\">\r\n                    <input \r\n                        type=\"text\" \r\n                        value={this.state.term}\r\n                        onChange={(event) => {this.setState({term: event.target.value})}}\r\n                        placeholder={PlaylistsConstants.FEATURED_PLAYLISTS_INPUT_SEARCH} />\r\n                    <i className=\"search icon app--icon-primary-color\"></i>\r\n                </div>\r\n                <br />\r\n                <div className=\"ui two column stackable grid\">\r\n                    {\r\n                        playlists.map((item) => {\r\n                            return (\r\n                                <FeaturedPlaylistCard key={item.id} playlist={item} />\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        filter: state.filter,\r\n        playlists: state.playlists,\r\n        authorization: state.authorization\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchFeaturedPlaylists, fetchAuthorization })(FeaturedPlaylists);","export const FEATURED_PLAYLISTS_LOADING_TEXT = 'Loading playlists ...';\r\nexport const FEATURED_PLAYLISTS_INPUT_SEARCH = 'Search for a playlist...';","import React, { Component } from \"react\";\r\nimport Filter from \"./Filter\";\r\nimport FeaturedPlaylists from \"./FeaturedPlaylists\";\r\nimport Logo from '../images/logo.png';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui container app--full-height\">\r\n        <div className=\"ui basic center aligned segment app--header\">\r\n            <img src={Logo} alt=\"Spotifood\" height=\"100\" />\r\n        </div>\r\n        <Filter />\r\n        <FeaturedPlaylists />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchAuthorization } from '../actions';\r\nimport { decodeQuery } from '../utils/queryString';\r\nimport Loading from '../components/Loading';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as CallbackConstants from '../utils/constants/components/callbackConstants'\r\n\r\nclass Callback extends React.Component {\r\n    componentDidMount() {\r\n        const authorization = decodeQuery(this.props.location.hash);\r\n        this.props.fetchAuthorization(authorization);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.authorization){\r\n            return(<Loading text={CallbackConstants.CALLBACK_LOADING_TEXT} height=\"full-height\" />);\r\n        }\r\n\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authorization: state.authorization\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchAuthorization })(Callback);","import queryString from 'query-string';\r\n\r\nexport const encodeQuery = (url, params = null) => \r\n{\r\n    const query = !params ? url : url + '?' + queryString.stringify(params);\r\n    return query;\r\n};\r\n\r\nexport const decodeQuery = (query) => {\r\n    return queryString.parse(query);\r\n};","export const CALLBACK_LOADING_TEXT = 'Identifying User ...';","import React from 'react';\r\nimport { encodeQuery } from '../utils/queryString';\r\nimport Loading from '../components/Loading';\r\nimport * as AuthConstants from '../utils/constants/components/authConstants'\r\n\r\nexport default class Auth extends React.Component {\r\n    componentDidMount() {\r\n        const url = encodeQuery(AuthConstants.AUTHORIZATION_SPOTIFY_ENDPOINT, {\r\n            client_id: AuthConstants.AUTHORIZATION_SPOTIFY_CLIENT_ID,\r\n            response_type: AuthConstants.AUTHORIZATION_SPOTIFY_RESPONSE_TYPE,\r\n            redirect_uri: AuthConstants.AUTHORIZATION_SPOTIFY_REDIRECT_URI\r\n        });\r\n\r\n        window.location.href = url;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Loading text={AuthConstants.AUTHORIZATION_LOADING_TEXT} height=\"full-height\" />\r\n        );\r\n    }\r\n}","export const AUTHORIZATION_SPOTIFY_ENDPOINT = 'https://accounts.spotify.com/authorize';\r\nexport const AUTHORIZATION_SPOTIFY_CLIENT_ID = '05505a02959540328c55a270621221c3';\r\nexport const AUTHORIZATION_SPOTIFY_RESPONSE_TYPE = 'token';\r\nexport const AUTHORIZATION_SPOTIFY_REDIRECT_URI = 'http://localhost:3000/callback';\r\n\r\nexport const AUTHORIZATION_LOADING_TEXT = 'Getting Access ...';","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Home from \"./Home\";\r\nimport Callback from './Callback';\r\nimport Auth from './Auth';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app--full-height\">\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route path=\"/home\" component={Home}  />\r\n            <Route path=\"/callback\" component={Callback} />\r\n            <Route path=\"/auth\" component={Auth} />\r\n            <Redirect exact from=\"/\" to=\"auth\" />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from \"./components/App\";\r\nimport store from './store'\r\n\r\nconst container = document.getElementById('app');\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    container\r\n);"],"sourceRoot":""}